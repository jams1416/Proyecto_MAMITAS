// Importaciones necesarias para la autenticación de Firebase, widgets personalizados de FlutterFlow,
// temas, utilidades, widgets y controladores de campos de formulario.
import '/auth/firebase_auth/auth_util.dart';
import '/flutter_flow/flutter_flow_drop_down.dart';
import '/flutter_flow/flutter_flow_theme.dart';
import '/flutter_flow/flutter_flow_util.dart';
import '/flutter_flow/flutter_flow_widgets.dart';
import '/flutter_flow/form_field_controller.dart';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:provider/provider.dart';

// Importación y exportación del modelo del formulario.
import 'formulario_model.dart';
export 'formulario_model.dart';

// Definición de la clase `FormularioWidget`, que es un widget de estado que representa el formulario principal.
class FormularioWidget extends StatefulWidget {
  // Constructor del widget con una clave opcional.
  const FormularioWidget({super.key});

  @override
  State<FormularioWidget> createState() => _FormularioWidgetState();
}

// Clase de estado asociada con `FormularioWidget`.
class _FormularioWidgetState extends State<FormularioWidget> {
  // Instancia del modelo asociado a este formulario.
  late FormularioModel _model;

  // Clave global para gestionar el estado del Scaffold (esqueleto de la aplicación).
  final scaffoldKey = GlobalKey<ScaffoldState>();

  // Método que se llama al inicializar el estado del widget.
  @override
  void initState() {
    super.initState();
    // Crear una instancia del modelo utilizando un método especializado que lo asocia con el contexto.
    _model = createModel(context, () => FormularioModel());

    // Inicialización de los controladores de texto y nodos de enfoque si aún no han sido creados.
    _model.numeroTextController ??= TextEditingController();
    _model.numeroFocusNode ??= FocusNode();

    _model.edadTextController ??= TextEditingController();
    _model.edadFocusNode ??= FocusNode();

    _model.tallaTextController ??= TextEditingController();
    _model.tallaFocusNode ??= FocusNode();

    _model.pesoTextController ??= TextEditingController();
    _model.pesoFocusNode ??= FocusNode();

    _model.imcTextController ??= TextEditingController();
    _model.imcFocusNode ??= FocusNode();

    // Callback que se ejecuta después de que los widgets se han construido para actualizar el estado.
    WidgetsBinding.instance.addPostFrameCallback((_) => setState(() {}));
  }

  // Método que se llama cuando el estado del widget se va a eliminar de la memoria.
  @override
  void dispose() {
    // Liberar los recursos utilizados por el modelo.
    _model.dispose();
    super.dispose();
  }

  // Método principal que construye la interfaz gráfica del widget.
  @override
  Widget build(BuildContext context) {
    // Widget que detecta gestos, como toques, para cerrar el teclado al tocar fuera de un campo de texto.
    return GestureDetector(
      onTap: () => FocusScope.of(context).unfocus(),
      child: Scaffold(
        // Clave asociada al Scaffold para poder interactuar con su estado.
        key: scaffoldKey,
        backgroundColor: Colors.white,
        // Definición de un cajón lateral (Drawer) con un ancho específico.
        drawer: Container(
          width: 300,
          child: Drawer(
            elevation: 10,
            child: Container(
              // Estilo del contenedor del Drawer con un color de fondo personalizado.
              decoration: BoxDecoration(
                color: Color(0xCF56ABEC),
              ),
              // Columna que organiza los widgets dentro del Drawer.
              child: Column(
                mainAxisSize: MainAxisSize.max,
                children: [
                  // Espaciado y botón de cierre del Drawer con un icono de flecha hacia atrás.
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(20, 40, 20, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        InkWell(
                          // Configuración del comportamiento visual del botón.
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          // Acción que se ejecuta al tocar el botón para cerrar el Drawer.
                          onTap: () async {
                            if (scaffoldKey.currentState!.isDrawerOpen ||
                                scaffoldKey.currentState!.isEndDrawerOpen) {
                              Navigator.pop(context);
                            }
                          },
                          // Icono de flecha hacia atrás.
                          child: Icon(
                            Icons.arrow_back,
                            color: Colors.white,
                            size: 24,
                          ),
                        ),
                      ],
                    ),
                  ),
                  // Imagen circular que muestra el perfil del usuario.
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 50, 0, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Container(
                          width: 120,
                          height: 120,
                          clipBehavior: Clip.antiAlias,
                          decoration: BoxDecoration(
                            shape: BoxShape.circle,
                          ),
                          // Imagen del perfil cargada desde los assets.
                          child: Image.asset(
                            'assets/images/perfil.jpg',
                            fit: BoxFit.cover,
                          ),
                        ),
                      ],
                    ),
                  ),
                  // Mostrar el nombre del usuario autenticado utilizando `AuthUserStreamWidget`.
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 4, 0, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        AuthUserStreamWidget(
                          builder: (context) => Text(
                            currentUserDisplayName,
                            style: FlutterFlowTheme.of(context)
                                .titleMedium
                                .override(
                                  fontFamily: 'Readex Pro',
                                  letterSpacing: 0,
                                ),
                          ),
                        ),
                      ],
                    ),
                  ),
                  // Mostrar el correo electrónico del usuario autenticado.
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 4, 0, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text(
                          currentUserEmail,
                          style:
                              FlutterFlowTheme.of(context).titleMedium.override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                        ),
                      ],
                    ),
                  ),
                  // Lista de opciones en el Drawer, cada una representada por un `ListTile`.
                  ListView(
                    padding: EdgeInsets.zero,
                    shrinkWrap: true,
                    scrollDirection: Axis.vertical,
                    children: [
                      // Botón para navegar a la página principal.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 10, 0, 0),
                        child: InkWell(
                          // Configuración de comportamiento visual del botón.
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          // Acción para navegar a la página principal.
                          onTap: () async {
                            context.pushNamed('PaginaPrincipal');
                          },
                          // `ListTile` para la opción de "Inicio".
                          child: ListTile(
                            leading: Icon(
                              Icons.restart_alt,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                '8v5s0z66' /* Inicio */,
                              ),
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      // Botón para navegar a la página de configuración de perfil.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Perfil');
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.person,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'dxm8sksc' /* configura tu perfil */,
                              ),
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      // Botón para navegar al formulario de pacientes.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Formulario');
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.dynamic_form,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'ieywjdk0' /* Formulario-Paciente */,
                              ),
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      // Botón para navegar a la página de imágenes termográficas.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Imagenes');
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.image_search,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'ge6nf22c' /* Imagenes Termográficas */,
                              ),
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      // Botón para navegar a la página de resultados.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Resultados');
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.bar_chart,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                '9qk9nb6m' /* Resultados */,
                              ),
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      // Botón para navegar a la página de la base de datos.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('BasedeDatos');
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.card_travel,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'kgtltxzk' /* Base de Datos */,
                              ),
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      // Botón para cerrar sesión y regresar a la pantalla de inicio de sesión.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Login');
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.exit_to_app,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'dg79mymt' /* Salir  */,
                              ),
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ),
        ),
        // Configuración de la barra de aplicaciones (AppBar).
        appBar: AppBar(
          backgroundColor: Color(0xCF56ABEC),
          iconTheme: IconThemeData(color: Colors.black),
          automaticallyImplyLeading: true,
          // Título del AppBar con texto personalizado.
          title: Row(
            mainAxisSize: MainAxisSize.max,
            children: [
              Row(
                mainAxisSize: MainAxisSize.max,
                mainAxisAlignment: MainAxisAlignment.start,
                children: [
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 0, 20, 0),
                    child: Text(
                      FFLocalizations.of(context).getText(
                        '19a2kx5k' /* Formulario
mamitas */
                        ,
                      ),
                      style:
                          FlutterFlowTheme.of(context).headlineSmall.override(
                                fontFamily: 'Outfit',
                                letterSpacing: 0,
                              ),
                    ),
                  ),
                ],
              ),
            ],
          ),
          // Acciones en la barra superior, en este caso, la posibilidad de cambiar el modo de visualización.
          actions: [
            Container(
              height: 100,
              decoration: BoxDecoration(),
              child: Stack(
                children: [
                  // Modo claro: Opción de cambiar a modo oscuro.
                  if (Theme.of(context).brightness == Brightness.light)
                    InkWell(
                      splashColor: Colors.transparent,
                      focusColor: Colors.transparent,
                      hoverColor: Colors.transparent,
                      highlightColor: Colors.transparent,
                      onTap: () async {
                        setDarkModeSetting(
                          context,
                          !(Theme.of(context).brightness == Brightness.dark)
                              ? ThemeMode.dark
                              : ThemeMode.light,
                        );
                      },
                      child: Icon(
                        Icons.dark_mode_outlined,
                        color: Colors.black,
                        size: 40,
                      ),
                    ),
                  // Modo oscuro: Opción de cambiar a modo claro.
                  if (Theme.of(context).brightness == Brightness.dark)
                    InkWell(
                      splashColor: Colors.transparent,
                      focusColor: Colors.transparent,
                      hoverColor: Colors.transparent,
                      highlightColor: Colors.transparent,
                      onTap: () async {
                        setDarkModeSetting(context, ThemeMode.light);
                      },
                      child: Icon(
                        Icons.light_mode_outlined,
                        color: Colors.black,
                        size: 40,
                      ),
                    ),
                ],
              ),
            ),
          ],
          centerTitle: true,
          elevation: 4,
        ),
        // Cuerpo del formulario que se organiza dentro de un área segura.
        body: SafeArea(
          top: true,
          child: Column(
            mainAxisSize: MainAxisSize.max,
            children: [
              Container(
                width: 421,
                height: 742,
                decoration: BoxDecoration(),
                child: Column(
                  mainAxisSize: MainAxisSize.max,
                  children: [
                    // Botón de retroceso para regresar a la página principal.
                    Row(
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('PaginaPrincipal');
                          },
                          child: Icon(
                            Icons.arrow_back,
                            color: Colors.black,
                            size: 40,
                          ),
                        ),
                        Text(
                          FFLocalizations.of(context).getText(
                            '45n3ufsw' /* Atrás */,
                          ),
                          style:
                              FlutterFlowTheme.of(context).bodyMedium.override(
                                    fontFamily: 'Readex Pro',
                                    fontSize: 18,
                                    letterSpacing: 0,
                                  ),
                        ),
                      ],
                    ),
                    // Campo de texto para el número de identificación.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.numeroTextController,
                        focusNode: _model.numeroFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            '93xmce1c' /* Número de Identificación */,
                          ),
                          labelStyle:
                              FlutterFlowTheme.of(context).bodyMedium.override(
                                    fontFamily: 'Readex Pro',
                                    fontSize: 18,
                                    letterSpacing: 0,
                                    lineHeight: 1,
                                  ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(6),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(6),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(6),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(6),
                          ),
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 20, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              fontSize: 12,
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,
                        maxLines: 3,
                        keyboardType: TextInputType.number,
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.numeroTextControllerValidator
                            .asValidator(context),
                      ),
                    ),
                    // Campo de texto para la edad.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.edadTextController,
                        focusNode: _model.edadFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            '1exh4kov' /* Edad */,
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,
                        keyboardType: TextInputType.number,
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.edadTextControllerValidator
                            .asValidator(context),
                      ),
                    ),
                    // Campo de texto para la talla.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.tallaTextController,
                        focusNode: _model.tallaFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            '8xzwufi5' /* Talla  */,
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,
                        keyboardType: TextInputType.number,
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.tallaTextControllerValidator
                            .asValidator(context),
                      ),
                    ),
                    // Campo de texto para el peso.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.pesoTextController,
                        focusNode: _model.pesoFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            'ghjd55ep' /* Peso */,
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,
                        keyboardType: TextInputType.number,
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.pesoTextControllerValidator
                            .asValidator(context),
                      ),
                    ),
                    // Campo de texto para el IMC (Índice de Masa Corporal).
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.imcTextController,
                        focusNode: _model.imcFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            'lxqs3ndz' /* IMC */,
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,
                        keyboardType: TextInputType.number,
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.imcTextControllerValidator
                            .asValidator(context),
                      ),
                    ),
                    // Menú desplegable para seleccionar el lugar de residencia.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: FlutterFlowDropDown<String>(
                        controller: _model.lugardeResidenciaValueController1 ??=
                            FormFieldController<String>(null),
                        options: [
                          FFLocalizations.of(context).getText(
                            '29aw1g88' /* Rural */,
                          ),
                          FFLocalizations.of(context).getText(
                            '9owp7y1o' /* Urbano */,
                          )
                        ],
                        onChanged: (val) => setState(
                            () => _model.lugardeResidenciaValue1 = val),
                        width: 382,
                        height: 58,
                        textStyle: FlutterFlowTheme.of(context)
                            .headlineSmall
                            .override(
                              fontFamily: 'Outfit',
                              color: FlutterFlowTheme.of(context).primaryText,
                              fontSize: 18,
                              letterSpacing: 0,
                              fontWeight: FontWeight.normal,
                            ),
                        hintText: FFLocalizations.of(context).getText(
                          'qtq876a6' /* Lugar de Residencia */,
                        ),
                        icon: Icon(
                          Icons.keyboard_arrow_down_rounded,
                          color: FlutterFlowTheme.of(context).secondaryText,
                          size: 24,
                        ),
                        fillColor:
                            FlutterFlowTheme.of(context).secondaryBackground,
                        elevation: 2,
                        borderColor: Color(0xFF1134B6),
                        borderWidth: 2,
                        borderRadius: 8,
                        margin: EdgeInsetsDirectional.fromSTEB(5, 4, 16, 4),
                        hidesUnderline: true,
                        isOverButton: true,
                        isSearchable: false,
                        isMultiSelect: false,
                      ),
                    ),
                    // Menú desplegable para seleccionar el estado civil.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: FlutterFlowDropDown<String>(
                        controller: _model.lugardeResidenciaValueController2 ??=
                            FormFieldController<String>(null),
                        options: [
                          FFLocalizations.of(context).getText(
                            'e0iwh01a' /* Soltera */,
                          ),
                          FFLocalizations.of(context).getText(
                            'lygcfcax' /* Casada */,
                          ),
                          FFLocalizations.of(context).getText(
                            '3n763d9c' /* Unión Libre */,
                          ),
                          FFLocalizations.of(context).getText(
                            'fskmgeof' /* Viuda */,
                          ),
                          FFLocalizations.of(context).getText(
                            'xxskqw18' /* Separada */,
                          ),
                          FFLocalizations.of(context).getText(
                            'ikbypmaz' /* Divorciada */,
                          )
                        ],
                        onChanged: (val) => setState(
                            () => _model.lugardeResidenciaValue2 = val),
                        width: 382,
                        height: 56,
                        textStyle: FlutterFlowTheme.of(context)
                            .headlineMedium
                            .override(
                              fontFamily: 'Outfit',
                              fontSize: 18,
                              letterSpacing: 0,
                            ),
                        hintText: FFLocalizations.of(context).getText(
                          'ckqe0feb' /* Estado Civil */,
                        ),
                        icon: Icon(
                          Icons.keyboard_arrow_down_rounded,
                          color: FlutterFlowTheme.of(context).secondaryText,
                          size: 24,
                        ),
                        fillColor:
                            FlutterFlowTheme.of(context).secondaryBackground,
                        elevation: 2,
                        borderColor: Color(0xFF1134B6),
                        borderWidth: 2,
                        borderRadius: 8,
                        margin: EdgeInsetsDirectional.fromSTEB(5, 4, 16, 4),
                        hidesUnderline: true,
                        isOverButton: true,
                        isSearchable: false,
                        isMultiSelect: false,
                      ),
                    ),
                    // Menú desplegable para seleccionar el nivel educativo.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: FlutterFlowDropDown<String>(
                        controller: _model.lugardeResidenciaValueController3 ??=
                            FormFieldController<String>(null),
                        options: [
                          FFLocalizations.of(context).getText(
                            'uzoz4fte' /* Ninguno */,
                          ),
                          FFLocalizations.of(context).getText(
                            '93szhsgk' /* Educación Básica Primaria */,
                          ),
                          FFLocalizations.of(context).getText(
                            'wsfetpny' /* Educación Básica Secundaria */,
                          ),
                          FFLocalizations.of(context).getText(
                            '71aaitys' /* Educación Media */,
                          ),
                          FFLocalizations.of(context).getText(
                            'hvlakmhl' /* Pregrado */,
                          ),
                          FFLocalizations.of(context).getText(
                            '4732zegb' /* Posgrado */,
                          )
                        ],
                        onChanged: (val) => setState(
                            () => _model.lugardeResidenciaValue3 = val),
                        width: 382,
                        height: 56,
                        textStyle: FlutterFlowTheme.of(context)
                            .headlineMedium
                            .override(
                              fontFamily: 'Outfit',
                              fontSize: 18,
                              letterSpacing: 0,
                            ),
                        hintText: FFLocalizations.of(context).getText(
                          'ki2yfycr' /* Nivel Educativo */,
                        ),
                        icon: Icon(
                          Icons.keyboard_arrow_down_rounded,
                          color: FlutterFlowTheme.of(context).secondaryText,
                          size: 24,
                        ),
                        fillColor:
                            FlutterFlowTheme.of(context).secondaryBackground,
                        elevation: 2,
                        borderColor: Color(0xFF1134B6),
                        borderWidth: 2,
                        borderRadius: 8,
                        margin: EdgeInsetsDirectional.fromSTEB(5, 4, 16, 4),
                        hidesUnderline: true,
                        isOverButton: true,
                        isSearchable: false,
                        isMultiSelect: false,
                      ),
                    ),
                    // Botón para avanzar al siguiente formulario.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(0, 30, 0, 0),
                      child: FFButtonWidget(
                        onPressed: () async {
                          context.pushNamed('Formulario2');
                        },
                        text: FFLocalizations.of(context).getText(
                          'a3c1nzc3' /* Siguiente */,
                        ),
                        options: FFButtonOptions(
                          height: 40,
                          padding: EdgeInsetsDirectional.fromSTEB(24, 0, 24, 0),
                          iconPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                          color: Color(0xCF56ABEC),
                          textStyle:
                              FlutterFlowTheme.of(context).titleSmall.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.white,
                                    letterSpacing: 0,
                                  ),
                          elevation: 3,
                          borderSide: BorderSide(
                            color: Colors.transparent,
                            width: 1,
                          ),
                          borderRadius: BorderRadius.circular(8),
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
import 'formulario2_model.dart';
export 'formulario2_model.dart';

// Definición del widget `Formulario2Widget` como un `StatefulWidget`
// porque tiene un estado mutable que puede cambiar durante la ejecución.
class Formulario2Widget extends StatefulWidget {
  const Formulario2Widget({super.key});

  @override
  State<Formulario2Widget> createState() => _Formulario2WidgetState();
}

// Clase que maneja el estado del widget `Formulario2Widget`.
class _Formulario2WidgetState extends State<Formulario2Widget> {
  // Instancia del modelo `Formulario2Model` que manejará el estado del formulario.
  late Formulario2Model _model;

  // Llave para el `Scaffold` que permite controlar el estado del mismo.
  final scaffoldKey = GlobalKey<ScaffoldState>();

  // Método `initState` que se ejecuta al inicializar el widget.
  @override
  void initState() {
    super.initState();
    // Se crea el modelo `Formulario2Model` y se asocia al contexto actual.
    _model = createModel(context, () => Formulario2Model());

    // Inicialización del controlador de texto y del nodo de enfoque para el campo "Edad Gestacional".
    _model.gestacionalTextController ??= TextEditingController();
    _model.gestacionalFocusNode ??= FocusNode();

    // Callback que se ejecuta después de que la construcción del widget esté completa,
    // asegurando que el estado inicial esté correctamente configurado.
    WidgetsBinding.instance.addPostFrameCallback((_) => setState(() {}));
  }

  // Método `dispose` que se ejecuta cuando el widget se elimina de la memoria.
  @override
  void dispose() {
    // Liberar los recursos asociados al modelo para evitar fugas de memoria.
    _model.dispose();
    super.dispose();
  }

  // Método `build` que define la interfaz de usuario del widget.
  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      // Cierra el teclado al hacer clic fuera de un campo de texto.
      onTap: () => FocusScope.of(context).unfocus(),
      child: Scaffold(
        key: scaffoldKey,
        backgroundColor: Colors.white,
        // Menú lateral desplegable (drawer) que contiene opciones de navegación.
        drawer: Container(
          width: 300,
          child: Drawer(
            elevation: 10,
            child: Container(
              decoration: BoxDecoration(
                color: Color(0xCF56ABEC), // Color de fondo del drawer.
              ),
              child: Column(
                mainAxisSize: MainAxisSize.max,
                children: [
                  // Sección del drawer que muestra un icono de retroceso.
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(20, 40, 20, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        // Icono de flecha que cierra el drawer al hacer clic.
                        InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            if (scaffoldKey.currentState!.isDrawerOpen ||
                                scaffoldKey.currentState!.isEndDrawerOpen) {
                              Navigator.pop(context);
                            }
                          },
                          child: Icon(
                            Icons.arrow_back,
                            color: Colors.white,
                            size: 24,
                          ),
                        ),
                      ],
                    ),
                  ),
                  // Sección que muestra la imagen de perfil del usuario.
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 50, 0, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Container(
                          width: 120,
                          height: 120,
                          clipBehavior: Clip.antiAlias,
                          decoration: BoxDecoration(
                            shape: BoxShape.circle, // Forma circular para la imagen.
                          ),
                          child: Image.asset(
                            'assets/images/perfil.jpg',
                            fit: BoxFit.cover,
                          ),
                        ),
                      ],
                    ),
                  ),
                  // Sección que muestra el nombre y el correo electrónico del usuario actual.
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 4, 0, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        AuthUserStreamWidget(
                          builder: (context) => Text(
                            currentUserDisplayName, // Muestra el nombre del usuario.
                            style: FlutterFlowTheme.of(context)
                                .titleMedium
                                .override(
                                  fontFamily: 'Readex Pro',
                                  letterSpacing: 0,
                                ),
                          ),
                        ),
                      ],
                    ),
                  ),
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 4, 0, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text(
                          currentUserEmail, // Muestra el correo electrónico del usuario.
                          style:
                              FlutterFlowTheme.of(context).titleMedium.override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                        ),
                      ],
                    ),
                  ),
                  // Lista de opciones de navegación dentro del drawer.
                  ListView(
                    padding: EdgeInsets.zero,
                    shrinkWrap: true,
                    scrollDirection: Axis.vertical,
                    children: [
                      // Opción para navegar a la página principal.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 10, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('PaginaPrincipal');
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.restart_alt,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'wx6lizwj' /* Inicio */,
                              ),
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      // Opción para navegar a la página de perfil.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Perfil');
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.person,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                '72jhca8y' /* Configura tu Perfil */,
                              ),
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      // Opción para navegar al formulario de pacientes.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Formulario2');
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.dynamic_form,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                '3eqoezbe' /* Formulario-Paciente */,
                              ),
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      // Opción para navegar a la página de imágenes termográficas.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Imagenes');
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.image_search,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'a426rb3g' /* Imágenes Termográficas */,
                              ),
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      // Opción para navegar a la página de resultados.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Resultados');
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.bar_chart,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'j5xmqd0a' /* Resultados */,
                              ),
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      // Opción para navegar a la base de datos.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('BasedeDatos');
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.card_travel,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'gbyo8bjo' /* Base de Datos */,
                              ),
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      // Opción para cerrar sesión.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Login');
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.exit_to_app,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'aq3uayv3' /* Salir  */,
                              ),
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ),
        ),
        // AppBar que contiene el título y las acciones del formulario.
        appBar: AppBar(
          backgroundColor: Color(0xCF56ABEC),
          iconTheme: IconThemeData(color: Colors.black),
          automaticallyImplyLeading: true,
          title: Row(
            mainAxisSize: MainAxisSize.max,
            children: [
              Row(
                mainAxisSize: MainAxisSize.max,
                mainAxisAlignment: MainAxisAlignment.start,
                children: [
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 0, 20, 0),
                    child: Text(
                      FFLocalizations.of(context).getText(
                        '1n8sde5w' /* Formulario mamitas */,
                      ),
                      style:
                          FlutterFlowTheme.of(context).headlineSmall.override(
                                fontFamily: 'Outfit',
                                letterSpacing: 0,
                              ),
                    ),
                  ),
                ],
              ),
            ],
          ),
          actions: [
            // Icono para cambiar entre modo oscuro y claro.
            Container(
              height: 100,
              decoration: BoxDecoration(),
              child: Stack(
                children: [
                  if (Theme.of(context).brightness == Brightness.light)
                    InkWell(
                      splashColor: Colors.transparent,
                      focusColor: Colors.transparent,
                      hoverColor: Colors.transparent,
                      highlightColor: Colors.transparent,
                      onTap: () async {
                        setDarkModeSetting(
                          context,
                          !(Theme.of(context).brightness == Brightness.dark)
                              ? ThemeMode.dark
                              : ThemeMode.light,
                        );
                      },
                      child: Icon(
                        Icons.dark_mode_outlined,
                        color: Colors.black,
                        size: 40,
                      ),
                    ),
                  if (Theme.of(context).brightness == Brightness.dark)
                    InkWell(
                      splashColor: Colors.transparent,
                      focusColor: Colors.transparent,
                      hoverColor: Colors.transparent,
                      highlightColor: Colors.transparent,
                      onTap: () async {
                        setDarkModeSetting(context, ThemeMode.light);
                      },
                      child: Icon(
                        Icons.light_mode_outlined,
                        color: Colors.black,
                        size: 40,
                      ),
                    ),
                ],
              ),
            ),
          ],
          centerTitle: true,
          elevation: 4,
        ),
        // Contenido principal del formulario.
        body: SafeArea(
          top: true,
          child: Column(
            mainAxisSize: MainAxisSize.max,
            children: [
              Container(
                decoration: BoxDecoration(),
                child: Padding(
                  padding: EdgeInsets.all(8),
                  child: Column(
                    mainAxisSize: MainAxisSize.max,
                    children: [
                      // Botón de retroceso para volver a la página anterior.
                      Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          InkWell(
                            splashColor: Colors.transparent,
                            focusColor: Colors.transparent,
                            hoverColor: Colors.transparent,
                            highlightColor: Colors.transparent,
                            onTap: () async {
                              context.pushNamed('Formulario');
                            },
                            child: Icon(
                              Icons.arrow_back,
                              color: Colors.black,
                              size: 40,
                            ),
                          ),
                          Text(
                            FFLocalizations.of(context).getText(
                              'hs97w59k' /* Atrás */,
                            ),
                            style: FlutterFlowTheme.of(context)
                                .bodyMedium
                                .override(
                                  fontFamily: 'Readex Pro',
                                  fontSize: 18,
                                  letterSpacing: 0,
                                ),
                          ),
                        ],
                      ),
                      // Menú desplegable para seleccionar la "Clasificación ASA".
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                        child: FlutterFlowDropDown<String>(
                          controller: _model.clasificacionASAValueController ??=
                              FormFieldController<String>(null),
                          options: [
                            FFLocalizations.of(context).getText(
                              '4esguopi' /* Clase I */,
                            ),
                            FFLocalizations.of(context).getText(
                              'sj8cg6cg' /* Clase II */,
                            ),
                            FFLocalizations.of(context).getText(
                              'u3p5adwa' /* Clase III */,
                            ),
                            FFLocalizations.of(context).getText(
                              'o301n9i1' /* Clase IV */,
                            ),
                            FFLocalizations.of(context).getText(
                              'kiq5nb6b' /* Clase V */,
                            )
                          ],
                          onChanged: (val) => setState(
                              () => _model.clasificacionASAValue = val),
                          width: 382,
                          height: 56,
                          textStyle: FlutterFlowTheme.of(context)
                              .headlineMedium
                              .override(
                                fontFamily: 'Outfit',
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          hintText: FFLocalizations.of(context).getText(
                            'a5wc9ft0' /* Clasificación ASA */,
                          ),
                          icon: Icon(
                            Icons.keyboard_arrow_down_rounded,
                            color: FlutterFlowTheme.of(context).secondaryText,
                            size: 24,
                          ),
                          fillColor:
                              FlutterFlowTheme.of(context).secondaryBackground,
                          elevation: 2,
                          borderColor: Color(0xFF1134B6),
                          borderWidth: 2,
                          borderRadius: 8,
                          margin: EdgeInsetsDirectional.fromSTEB(5, 4, 16, 4),
                          hidesUnderline: true,
                          isOverButton: true,
                          isSearchable: false,
                          isMultiSelect: false,
                        ),
                      ),
                      // Menú desplegable para seleccionar la asistencia al curso psicoprofiláctico.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                        child: FlutterFlowDropDown<String>(
                          controller:
                              _model.cursoPsicoprofilacticoValueController ??=
                                  FormFieldController<String>(null),
                          options: [
                            FFLocalizations.of(context).getText(
                              '96ekjzs3' /* Asistencia */,
                            ),
                            FFLocalizations.of(context).getText(
                              '6ge6v62s' /* No Asistencia */,
                            )
                          ],
                          onChanged: (val) => setState(
                              () => _model.cursoPsicoprofilacticoValue = val),
                          width: 382,
                          height: 56,
                          textStyle: FlutterFlowTheme.of(context)
                              .headlineMedium
                              .override(
                                fontFamily: 'Outfit',
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          hintText: FFLocalizations.of(context).getText(
                            '3ctsm0ww' /* Curso Psicoprofiláctico */,
                          ),
                          icon: Icon(
                            Icons.keyboard_arrow_down_rounded,
                            color: FlutterFlowTheme.of(context).secondaryText,
                            size: 24,
                          ),
                          fillColor:
                              FlutterFlowTheme.of(context).secondaryBackground,
                          elevation: 2,
                          borderColor: Color(0xFF1134B6),
                          borderWidth: 2,
                          borderRadius: 8,
                          margin: EdgeInsetsDirectional.fromSTEB(5, 4, 16, 4),
                          hidesUnderline: true,
                          isOverButton: true,
                          isSearchable: false,
                          isMultiSelect: false,
                        ),
                      ),
                      // Menú desplegable para seleccionar el control prenatal.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                        child: FlutterFlowDropDown<String>(
                          controller: _model.controlPrenatalValueController1 ??=
                              FormFieldController<String>(null),
                          options: [
                            FFLocalizations.of(context).getText(
                              'ru08sy4c' /* Uno */,
                            ),
                            FFLocalizations.of(context).getText(
                              '2urvv1nn' /* Dos */,
                            ),
                            FFLocalizations.of(context).getText(
                              'lp5yfi3q' /* Tres */,
                            ),
                            FFLocalizations.of(context).getText(
                              'merqernt' /* Cuatro */,
                            ),
                            FFLocalizations.of(context).getText(
                              'i3ow24uf' /* Cinco */,
                            ),
                            FFLocalizations.of(context).getText(
                              'um21u8pf' /* Seis */,
                            ),
                            FFLocalizations.of(context).getText(
                              'dgxsczh1' /* Siete */,
                            ),
                            FFLocalizations.of(context).getText(
                              'jbhdfuwr' /* Ocho */,
                            ),
                            FFLocalizations.of(context).getText(
                              '5556quxf' /* Nueve */,
                            ),
                            FFLocalizations.of(context).getText(
                              '725vshlu' /* Diez */,
                            )
                          ],
                          onChanged: (val) => setState(
                              () => _model.controlPrenatalValue1 = val),
                          width: 382,
                          height: 56,
                          textStyle: FlutterFlowTheme.of(context)
                              .headlineMedium
                              .override(
                                fontFamily: 'Outfit',
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          hintText: FFLocalizations.of(context).getText(
                            'k91ee5v7' /* Control Prenatal */,
                          ),
                          icon: Icon(
                            Icons.keyboard_arrow_down_rounded,
                            color: FlutterFlowTheme.of(context).secondaryText,
                            size: 24,
                          ),
                          fillColor:
                              FlutterFlowTheme.of(context).secondaryBackground,
                          elevation: 2,
                          borderColor: Color(0xFF1134B6),
                          borderWidth: 2,
                          borderRadius: 8,
                          margin: EdgeInsetsDirectional.fromSTEB(5, 4, 16, 4),
                          hidesUnderline: true,
                          isOverButton: true,
                          isSearchable: false,
                          isMultiSelect: false,
                        ),
                      ),
                      // Menú desplegable para seleccionar la paridad.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                        child: FlutterFlowDropDown<String>(
                          controller: _model.controlPrenatalValueController2 ??=
                              FormFieldController<String>(null),
                          options: [
                            FFLocalizations.of(context).getText(
                              'lieob6c1' /* Nulípara */,
                            ),
                            FFLocalizations.of(context).getText(
                              'kqpbh22c' /* Multípara */,
                            )
                          ],
                          onChanged: (val) => setState(
                              () => _model.controlPrenatalValue2 = val),
                          width: 382,
                          height: 56,
                          textStyle: FlutterFlowTheme.of(context)
                              .headlineMedium
                              .override(
                                fontFamily: 'Outfit',
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          hintText: FFLocalizations.of(context).getText(
                            'qgkr0dek' /* Paridad */,
                          ),
                          icon: Icon(
                            Icons.keyboard_arrow_down_rounded,
                            color: FlutterFlowTheme.of(context).secondaryText,
                            size: 24,
                          ),
                          fillColor:
                              FlutterFlowTheme.of(context).secondaryBackground,
                          elevation: 2,
                          borderColor: Color(0xFF1134B6),
                          borderWidth: 2,
                          borderRadius: 8,
                          margin: EdgeInsetsDirectional.fromSTEB(5, 4, 16, 4),
                          hidesUnderline: true,
                          isOverButton: true,
                          isSearchable: false,
                          isMultiSelect: false,
                        ),
                      ),
                      // Campo de texto para ingresar la edad gestacional.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                        child: TextFormField(
                          controller: _model.gestacionalTextController,
                          focusNode: _model.gestacionalFocusNode,
                          autofocus: true,
                          obscureText: false,
                          decoration: InputDecoration(
                            labelText: FFLocalizations.of(context).getText(
                              'ezoml033' /* Edad Gestacional  */,
                            ),
                            labelStyle: FlutterFlowTheme.of(context)
                                .headlineSmall
                                .override(
                                  fontFamily: 'Outfit',
                                  color: Colors.black,
                                  fontSize: 18,
                                  letterSpacing: 0,
                                ),
                            alignLabelWithHint: true,
                            hintStyle: FlutterFlowTheme.of(context)
                                .labelMedium
                                .override(
                                  fontFamily: 'Readex Pro',
                                  color: Colors.black,
                                  letterSpacing: 0,
                                ),
                            enabledBorder: OutlineInputBorder(
                              borderSide: BorderSide(
                                color:
                                    FlutterFlowTheme.of(context).customColor1,
                                width: 4,
                              ),
                              borderRadius: BorderRadius.circular(8),
                            ),
                            focusedBorder: OutlineInputBorder(
                              borderSide: BorderSide(
                                color: FlutterFlowTheme.of(context).primary,
                                width: 4,
                              ),
                              borderRadius: BorderRadius.circular(8),
                            ),
                            errorBorder: OutlineInputBorder(
                              borderSide: BorderSide(
                                color: FlutterFlowTheme.of(context).error,
                                width: 4,
                              ),
                              borderRadius: BorderRadius.circular(8),
                            ),
                            focusedErrorBorder: OutlineInputBorder(
                              borderSide: BorderSide(
                                color: FlutterFlowTheme.of(context).error,
                                width: 4,
                              ),
                              borderRadius: BorderRadius.circular(8),
                            ),
                            filled: true,
                            contentPadding:
                                EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),
                          ),
                          style:
                              FlutterFlowTheme.of(context).bodyMedium.override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                          textAlign: TextAlign.center,
                          keyboardType: TextInputType.number,
                          cursorColor: FlutterFlowTheme.of(context).tertiary,
                          validator: _model.gestacionalTextControllerValidator
                              .asValidator(context),
                        ),
                      ),
                      // Menú desplegable para seleccionar la presentación fetal.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                        child: FlutterFlowDropDown<String>(
                          controller: _model.controlPrenatalValueController3 ??=
                              FormFieldController<String>(null),
                          options: [
                            FFLocalizations.of(context).getText(
                              'yxgt0lcl' /* Cefálica */,
                            ),
                            FFLocalizations.of(context).getText(
                              'dy10bjgs' /* Pélvica */,
                            ),
                            FFLocalizations.of(context).getText(
                              'oxzql8tn' /* De Hombros */,
                            )
                          ],
                          onChanged: (val) => setState(
                              () => _model.controlPrenatalValue3 = val),
                          width: 382,
                          height: 56,
                          textStyle: FlutterFlowTheme.of(context)
                              .headlineMedium
                              .override(
                                fontFamily: 'Outfit',
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          hintText: FFLocalizations.of(context).getText(
                            'h048dwrx' /* Presentación Fetal */,
                          ),
                          icon: Icon(
                            Icons.keyboard_arrow_down_rounded,
                            color: FlutterFlowTheme.of(context).secondaryText,
                            size: 24,
                          ),
                          fillColor:
                              FlutterFlowTheme.of(context).secondaryBackground,
                          elevation: 2,
                          borderColor: Color(0xFF1134B6),
                          borderWidth: 2,
                          borderRadius: 8,
                          margin: EdgeInsetsDirectional.fromSTEB(5, 4, 16, 4),
                          hidesUnderline: true,
                          isOverButton: true,
                          isSearchable: false,
                          isMultiSelect: false,
                        ),
                      ),
                      // Menú desplegable para seleccionar la dilatación cervical.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                        child: FlutterFlowDropDown<String>(
                          controller: _model.controlPrenatalValueController4 ??=
                              FormFieldController<String>(null),
                          options: [
                            FFLocalizations.of(context).getText(
                              'am3m65zz' /* 0cm */,
                            ),
                            FFLocalizations.of(context).getText(
                              'q5jcnrz9' /* 1cm */,
                            ),
                            FFLocalizations.of(context).getText(
                              'cpg5gab1' /* 2cm */,
                            ),
                            FFLocalizations.of(context).getText(
                              'yxulth61' /* 3cm */,
                            ),
                            FFLocalizations.of(context).getText(
                              '2c6508rn' /* 4cm */,
                            ),
                            FFLocalizations.of(context).getText(
                              'pxfwiidm' /* 5cm */,
                            ),
                            FFLocalizations.of(context).getText(
                              '2k4gd2ye' /* 6cm */,
                            ),
                            FFLocalizations.of(context).getText(
                              '71kuni6u' /* 7cm */,
                            ),
                            FFLocalizations.of(context).getText(
                              'aaluew1k' /* 8cm */,
                            ),
                            FFLocalizations.of(context).getText(
                              'x3krtt4f' /* 9cm */,
                            ),
                            FFLocalizations.of(context).getText(
                              'd5lmlonh' /* 10cm */,
                            )
                          ],
                          onChanged: (val) => setState(
                              () => _model.controlPrenatalValue4 = val),
                          width: 382,
                          height: 56,
                          textStyle: FlutterFlowTheme.of(context)
                              .headlineMedium
                              .override(
                                fontFamily: 'Outfit',
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          hintText: FFLocalizations.of(context).getText(
                            '9jnbnqfk' /* Dilatación Cervical  */,
                          ),
                          icon: Icon(
                            Icons.keyboard_arrow_down_rounded,
                            color: FlutterFlowTheme.of(context).secondaryText,
                            size: 24,
                          ),
                          fillColor:
                              FlutterFlowTheme.of(context).secondaryBackground,
                          elevation: 2,
                          borderColor: Color(0xFF1134B6),
                          borderWidth: 2,
                          borderRadius: 8,
                          margin: EdgeInsetsDirectional.fromSTEB(5, 4, 16, 4),
                          hidesUnderline: true,
                          isOverButton: true,
                          isSearchable: false,
                          isMultiSelect: false,
                        ),
                      ),
                      // Menú desplegable para seleccionar el estado de las membranas ovulares.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                        child: FlutterFlowDropDown<String>(
                          controller: _model.controlPrenatalValueController5 ??=
                              FormFieldController<String>(null),
                          options: [
                            FFLocalizations.of(context).getText(
                              'bi7lji22' /* Íntegras */,
                            ),
                            FFLocalizations.of(context).getText(
                              'nzn6t5al' /* Rotas */,
                            )
                          ],
                          onChanged: (val) => setState(
                              () => _model.controlPrenatalValue5 = val),
                          width: 382,
                          height: 56,
                          textStyle: FlutterFlowTheme.of(context)
                              .headlineMedium
                              .override(
                                fontFamily: 'Outfit',
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          hintText: FFLocalizations.of(context).getText(
                            't2qhaav0' /* Membranas Ovulares */,
                          ),
                          icon: Icon(
                            Icons.keyboard_arrow_down_rounded,
                            color: FlutterFlowTheme.of(context).secondaryText,
                            size: 24,
                          ),
                          fillColor:
                              FlutterFlowTheme.of(context).secondaryBackground,
                          elevation: 2,
                          borderColor: Color(0xFF1134B6),
                          borderWidth: 2,
                          borderRadius: 8,
                          margin: EdgeInsetsDirectional.fromSTEB(5, 4, 16, 4),
                          hidesUnderline: true,
                          isOverButton: true,
                          isSearchable: false,
                          isMultiSelect: false,
                        ),
                      ),
                      // Botón para avanzar al siguiente formulario.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 30, 0),
                        child: FFButtonWidget(
                          onPressed: () async {
                            context.pushNamed('Formulario3');
                          },
                          text: FFLocalizations.of(context).getText(
                            '7dc9dzf2' /* Siguiente */,
                          ),
                          options: FFButtonOptions(
                            height: 40,
                            padding:
                                EdgeInsetsDirectional.fromSTEB(24, 0, 24, 0),
                            iconPadding:
                                EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                            color: Color(0xCF56ABEC),
                            textStyle: FlutterFlowTheme.of(context)
                                .titleSmall
                                .override(
                                  fontFamily: 'Readex Pro',
                                  color: Colors.white,
                                  letterSpacing: 0,
                                ),
                            elevation: 3,
                            borderSide: BorderSide(
                              color: Colors.transparent,
                              width: 1,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
import 'formulario3_model.dart';
export 'formulario3_model.dart';

// Definición del StatefulWidget que gestiona el formulario 3.
class Formulario3Widget extends StatefulWidget {
  const Formulario3Widget({super.key});

  @override
  State<Formulario3Widget> createState() => _Formulario3WidgetState();
}

// Clase privada que gestiona el estado de Formulario3Widget.
class _Formulario3WidgetState extends State<Formulario3Widget> {
  // Modelo que maneja la lógica y el estado del formulario.
  late Formulario3Model _model;

  // Clave global para el scaffold, permite controlar el estado del Scaffold desde cualquier lugar.
  final scaffoldKey = GlobalKey<ScaffoldState>();

  @override
  void initState() {
    super.initState();
    // Inicializa el modelo con el contexto y lo asocia con el Formulario3Model.
    _model = createModel(context, () => Formulario3Model());

    // Inicializa los controladores y focus nodes si no están ya inicializados.
    _model.neuroaxialTextController ??= TextEditingController();
    _model.neuroaxialFocusNode ??= FocusNode();

    _model.temperaturaAmbienteTextController ??= TextEditingController();
    _model.temperaturaAmbienteFocusNode ??= FocusNode();

    _model.centralTextController ??= TextEditingController();
    _model.centralFocusNode ??= FocusNode();

    _model.cutaneaTextController ??= TextEditingController();
    _model.cutaneaFocusNode ??= FocusNode();

    // Método para ejecutar un callback cuando el frame está listo.
    WidgetsBinding.instance.addPostFrameCallback((_) => setState(() {}));
  }

  // Método que se ejecuta cuando el widget se destruye, liberando recursos.
  @override
  void dispose() {
    // Libera los recursos ocupados por el modelo y sus componentes.
    _model.dispose();

    super.dispose();
  }

  // Método que construye la interfaz de usuario del formulario.
  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      // Oculta el teclado al tocar fuera de los campos de texto.
      onTap: () => FocusScope.of(context).unfocus(),
      child: Scaffold(
        key: scaffoldKey, // Asigna la clave del scaffold.
        backgroundColor: Colors.white, // Color de fondo de la pantalla.

        // Definición del menú lateral (Drawer) que contiene opciones de navegación.
        drawer: Container(
          width: 300, // Define el ancho del Drawer.
          child: Drawer(
            elevation: 10, // Define la elevación del Drawer.
            child: Container(
              width: 100,
              height: 100,
              decoration: BoxDecoration(
                color: Color(0xCF56ABEC), // Color de fondo del Drawer.
              ),
              child: Column(
                mainAxisSize: MainAxisSize.max,
                children: [
                  // Sección superior del Drawer, con un botón de retroceso.
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(20, 40, 20, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          // Acción para cerrar el Drawer al hacer clic en el botón de retroceso.
                          onTap: () async {
                            if (scaffoldKey.currentState!.isDrawerOpen ||
                                scaffoldKey.currentState!.isEndDrawerOpen) {
                              Navigator.pop(context);
                            }
                          },
                          child: Icon(
                            Icons.arrow_back, // Icono de flecha hacia atrás.
                            color: Colors.white, // Color del icono.
                            size: 24, // Tamaño del icono.
                          ),
                        ),
                      ],
                    ),
                  ),
                  // Imagen de perfil en el Drawer.
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 50, 0, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Container(
                          width: 120,
                          height: 120,
                          clipBehavior: Clip.antiAlias,
                          decoration: BoxDecoration(
                            shape: BoxShape.circle, // Forma circular para la imagen.
                          ),
                          child: Image.asset(
                            'assets/images/perfil.jpg', // Imagen de perfil.
                            fit: BoxFit.cover, // Ajuste de la imagen.
                          ),
                        ),
                      ],
                    ),
                  ),
                  // Muestra el nombre de usuario actual en el Drawer.
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 4, 0, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        AuthUserStreamWidget(
                          builder: (context) => Text(
                            currentUserDisplayName,
                            style: FlutterFlowTheme.of(context)
                                .titleMedium
                                .override(
                                  fontFamily: 'Readex Pro',
                                  letterSpacing: 0,
                                ),
                          ),
                        ),
                      ],
                    ),
                  ),
                  // Muestra el correo electrónico del usuario actual en el Drawer.
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 4, 0, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text(
                          currentUserEmail,
                          style:
                              FlutterFlowTheme.of(context).titleMedium.override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                        ),
                      ],
                    ),
                  ),
                  // Lista de opciones del menú Drawer.
                  ListView(
                    padding: EdgeInsets.zero,
                    shrinkWrap: true, // Ajusta la lista al contenido.
                    scrollDirection: Axis.vertical, // Scroll vertical.
                    children: [
                      // Opción de "Inicio" en el Drawer.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 10, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          // Navega a la página principal al hacer clic.
                          onTap: () async {
                            context.pushNamed('PaginaPrincipal');
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.restart_alt, // Icono de reinicio.
                              color: Colors.white, // Color del icono.
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                't3pbt5if' /* Inicio */,
                              ),
                              textAlign: TextAlign.start, // Alineación del texto.
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A), // Color del tile.
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      // Otras opciones del menú (Perfil, Formulario-Paciente, etc.).
                      // ...
                      // (Las demás opciones del menú siguen la misma estructura que la anterior).
                      // ...
                    ],
                  ),
                ],
              ),
            ),
          ),
        ),
        // Configuración de la AppBar.
        appBar: AppBar(
          backgroundColor: Color(0xCF56ABEC), // Color de fondo del AppBar.
          iconTheme: IconThemeData(color: Colors.black), // Color de los íconos.
          automaticallyImplyLeading: true, // Añade el icono de retroceso automáticamente.
          title: Row(
            mainAxisSize: MainAxisSize.max,
            children: [
              Row(
                mainAxisSize: MainAxisSize.max,
                mainAxisAlignment: MainAxisAlignment.start,
                children: [
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 0, 20, 0),
                    child: Text(
                      FFLocalizations.of(context).getText(
                        'xbzfaaum' /* Formulario mamitas */,
                      ),
                      style:
                          FlutterFlowTheme.of(context).headlineSmall.override(
                                fontFamily: 'Outfit',
                                letterSpacing: 0,
                              ),
                    ),
                  ),
                ],
              ),
            ],
          ),
          // Icono para cambiar entre modo oscuro y claro.
          actions: [
            Container(
              height: 100,
              decoration: BoxDecoration(),
              child: Stack(
                children: [
                  // Condicional para mostrar el icono correspondiente según el modo de tema.
                  if (Theme.of(context).brightness == Brightness.light)
                    InkWell(
                      splashColor: Colors.transparent,
                      focusColor: Colors.transparent,
                      hoverColor: Colors.transparent,
                      highlightColor: Colors.transparent,
                      // Cambia a modo oscuro al hacer clic.
                      onTap: () async {
                        setDarkModeSetting(
                          context,
                          !(Theme.of(context).brightness == Brightness.dark)
                              ? ThemeMode.dark
                              : ThemeMode.light,
                        );
                      },
                      child: Icon(
                        Icons.dark_mode_outlined, // Icono de modo oscuro.
                        color: Colors.black,
                        size: 40,
                      ),
                    ),
                  if (Theme.of(context).brightness == Brightness.dark)
                    InkWell(
                      splashColor: Colors.transparent,
                      focusColor: Colors.transparent,
                      hoverColor: Colors.transparent,
                      highlightColor: Colors.transparent,
                      // Cambia a modo claro al hacer clic.
                      onTap: () async {
                        setDarkModeSetting(context, ThemeMode.light);
                      },
                      child: Icon(
                        Icons.light_mode_outlined, // Icono de modo claro.
                        color: Colors.black,
                        size: 40,
                      ),
                    ),
                ],
              ),
            ),
          ],
          centerTitle: true, // Centra el título del AppBar.
          elevation: 4, // Sombra debajo del AppBar.
        ),
        // Cuerpo del formulario.
        body: SafeArea(
          top: true,
          child: Column(
            mainAxisSize: MainAxisSize.max,
            children: [
              Container(
                decoration: BoxDecoration(),
                child: Column(
                  mainAxisSize: MainAxisSize.max,
                  children: [
                    // Botón de retroceso dentro del formulario.
                    Row(
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          // Navega hacia atrás en la navegación de la aplicación.
                          onTap: () async {
                            context.safePop();
                          },
                          child: Icon(
                            Icons.arrow_back, // Icono de retroceso.
                            color: Colors.black, // Color del icono.
                            size: 40,
                          ),
                        ),
                        Text(
                          FFLocalizations.of(context).getText(
                            '3f8nbpu2' /* Atrás */,
                          ),
                          style:
                              FlutterFlowTheme.of(context).bodyMedium.override(
                                    fontFamily: 'Readex Pro',
                                    fontSize: 18,
                                    letterSpacing: 0,
                                  ),
                        ),
                      ],
                    ),
                    // Campo de texto para la técnica neuroaxial.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.neuroaxialTextController,
                        focusNode: _model.neuroaxialFocusNode,
                        autofocus: true, // El campo gana el foco automáticamente.
                        obscureText: false, // No oculta el texto (no es una contraseña).
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            'sjty0ebe' /* Técnica Neuroaxial */,
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4, // Ancho del borde.
                            ),
                            borderRadius: BorderRadius.circular(8), // Bordes redondeados.
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 20, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center, // Alineación del texto al centro.
                        keyboardType: TextInputType.number, // Tipo de teclado numérico.
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.neuroaxialTextControllerValidator
                            .asValidator(context),
                      ),
                    ),
                    // Menú desplegable para la mezcla farmacológica.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: FlutterFlowDropDown<String>(
                        controller: _model.controlPrenatalValueController1 ??=
                            FormFieldController<String>(null),
                        options: [
                          FFLocalizations.of(context).getText(
                            '5zomqhbx' /* Prellenada */,
                          ),
                          FFLocalizations.of(context).getText(
                            '95hguly7' /* No Prellenada */,
                          )
                        ],
                        onChanged: (val) =>
                            setState(() => _model.controlPrenatalValue1 = val),
                        width: 382,
                        height: 56,
                        textStyle: FlutterFlowTheme.of(context)
                            .headlineMedium
                            .override(
                              fontFamily: 'Outfit',
                              fontSize: 18,
                              letterSpacing: 0,
                            ),
                        hintText: FFLocalizations.of(context).getText(
                          'rzxw9vxr' /* Mezcla Farmacológica */,
                        ),
                        icon: Icon(
                          Icons.keyboard_arrow_down_rounded,
                          color: FlutterFlowTheme.of(context).secondaryText,
                          size: 24,
                        ),
                        fillColor:
                            FlutterFlowTheme.of(context).secondaryBackground,
                        elevation: 2,
                        borderColor: Color(0xFF1134B6),
                        borderWidth: 2,
                        borderRadius: 8,
                        margin: EdgeInsetsDirectional.fromSTEB(5, 4, 16, 4),
                        hidesUnderline: true,
                        isOverButton: true,
                        isSearchable: false,
                        isMultiSelect: false,
                      ),
                    ),
                    // Campo de texto para la temperatura ambiente.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.temperaturaAmbienteTextController,
                        focusNode: _model.temperaturaAmbienteFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            'vaunfbf5' /* Temperatura Ambiente */,
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,
                        keyboardType: TextInputType.number,
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model
                            .temperaturaAmbienteTextControllerValidator
                            .asValidator(context),
                      ),
                    ),
                    // Campo de texto para la temperatura central.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.centralTextController,
                        focusNode: _model.centralFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            't0kzxbiu' /* Temperatura Central */,
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,
                        keyboardType: TextInputType.number,
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.centralTextControllerValidator
                            .asValidator(context),
                      ),
                    ),
                    // Campo de texto para la temperatura cutánea.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.cutaneaTextController,
                        focusNode: _model.cutaneaFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            'ka44v861' /* Temperatura Cutánea */,
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle: FlutterFlowTheme.of(context)
                              .labelMedium
                              .override(
                                fontFamily: 'Readex Pro',
                                color: Colors.black,
                                letterSpacing: 0,
                              ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,
                        keyboardType: TextInputType.number,
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.cutaneaTextControllerValidator
                            .asValidator(context),
                      ),
                    ),
                    // Menú desplegable para la prueba de frío.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: FlutterFlowDropDown<String>(
                        controller: _model.controlPrenatalValueController2 ??=
                            FormFieldController<String>(null),
                        options: [
                          FFLocalizations.of(context).getText(
                            'tx2hk86w' /* Frío */,
                          ),
                          FFLocalizations.of(context).getText(
                            'f23eda6e' /* No Frío */,
                          )
                        ],
                        onChanged: (val) =>
                            setState(() => _model.controlPrenatalValue2 = val),
                        width: 382,
                        height: 56,
                        textStyle: FlutterFlowTheme.of(context)
                            .headlineMedium
                            .override(
                              fontFamily: 'Outfit',
                              fontSize: 18,
                              letterSpacing: 0,
                            ),
                        hintText: FFLocalizations.of(context).getText(
                          'fbmfc36c' /* Prueba Frío */,
                        ),
                        icon: Icon(
                          Icons.keyboard_arrow_down_rounded,
                          color: FlutterFlowTheme.of(context).secondaryText,
                          size: 24,
                        ),
                        fillColor:
                            FlutterFlowTheme.of(context).secondaryBackground,
                        elevation: 2,
                        borderColor: Color(0xFF1134B6),
                        borderWidth: 2,
                        borderRadius: 8,
                        margin: EdgeInsetsDirectional.fromSTEB(5, 4, 16, 4),
                        hidesUnderline: true,
                        isOverButton: true,
                        isSearchable: false,
                        isMultiSelect: false,
                      ),
                    ),
                    // Menú desplegable para la prueba de tacto superficial.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: FlutterFlowDropDown<String>(
                        controller: _model.controlPrenatalValueController3 ??=
                            FormFieldController<String>(null),
                        options: [
                          FFLocalizations.of(context).getText(
                            '467tiax4' /* Siente */,
                          ),
                          FFLocalizations.of(context).getText(
                            'ziyppxp1' /* No Siente */,
                          )
                        ],
                        onChanged: (val) =>
                            setState(() => _model.controlPrenatalValue3 = val),
                        width: 382,
                        height: 56,
                        textStyle: FlutterFlowTheme.of(context)
                            .headlineMedium
                            .override(
                              fontFamily: 'Outfit',
                              fontSize: 18,
                              letterSpacing: 0,
                            ),
                        hintText: FFLocalizations.of(context).getText(
                          'e3rgl1hz' /* Prueba de Tacto Superficial */,
                        ),
                        icon: Icon(
                          Icons.keyboard_arrow_down_rounded,
                          color: FlutterFlowTheme.of(context).secondaryText,
                          size: 24,
                        ),
                        fillColor:
                            FlutterFlowTheme.of(context).secondaryBackground,
                        elevation: 2,
                        borderColor: Color(0xFF1134B6),
                        borderWidth: 2,
                        borderRadius: 8,
                        margin: EdgeInsetsDirectional.fromSTEB(5, 4, 16, 4),
                        hidesUnderline: true,
                        isOverButton: true,
                        isSearchable: false,
                        isMultiSelect: false,
                      ),
                    ),
                    // Menú desplegable para el bloqueo motor.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: FlutterFlowDropDown<String>(
                        controller: _model.controlPrenatalValueController4 ??=
                            FormFieldController<String>(null),
                        options: [
                          FFLocalizations.of(context).getText(
                            'oud6bhdp' /* I Completo */,
                          ),
                          FFLocalizations.of(context).getText(
                            'mek9jemv' /* II Casi Completo */,
                          ),
                          FFLocalizations.of(context).getText(
                            'dw2hwghw' /* III Parcial */,
                          ),
                          FFLocalizations.of(context).getText(
                            'nw0b49b1' /* IV Nula */,
                          )
                        ],
                        onChanged: (val) =>
                            setState(() => _model.controlPrenatalValue4 = val),
                        width: 382,
                        height: 56,
                        textStyle: FlutterFlowTheme.of(context)
                            .headlineMedium
                            .override(
                              fontFamily: 'Outfit',
                              fontSize: 18,
                              letterSpacing: 0,
                            ),
                        hintText: FFLocalizations.of(context).getText(
                          'lxey0n4k' /* Bloqueo Motor */,
                        ),
                        icon: Icon(
                          Icons.keyboard_arrow_down_rounded,
                          color: FlutterFlowTheme.of(context).secondaryText,
                          size: 24,
                        ),
                        fillColor:
                            FlutterFlowTheme.of(context).secondaryBackground,
                        elevation: 2,
                        borderColor: Color(0xFF1134B6),
                        borderWidth: 2,
                        borderRadius: 8,
                        margin: EdgeInsetsDirectional.fromSTEB(5, 4, 16, 4),
                        hidesUnderline: true,
                        isOverButton: true,
                        isSearchable: false,
                        isMultiSelect: false,
                      ),
                    ),
                    // Botón para avanzar al siguiente formulario.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                      child: FFButtonWidget(
                        onPressed: () async {
                          context.pushNamed('Formulario4');
                        },
                        text: FFLocalizations.of(context).getText(
                          'ury2cf8y' /* Siguiente */,
                        ),
                        options: FFButtonOptions(
                          height: 40,
                          padding: EdgeInsetsDirectional.fromSTEB(24, 0, 24, 0),
                          iconPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                          color: Color(0xCF56ABEC),
                          textStyle:
                              FlutterFlowTheme.of(context).titleSmall.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.white,
                                    letterSpacing: 0,
                                  ),
                          elevation: 3,
                          borderSide: BorderSide(
                            color: Colors.transparent,
                            width: 1,
                          ),
                          borderRadius: BorderRadius.circular(8),
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
import 'formulario4_model.dart';  // Importa el modelo asociado al formulario 4.
export 'formulario4_model.dart';  // Exporta el modelo asociado para su uso en otras partes de la aplicación.

/// Este widget representa el cuarto formulario en la secuencia de formularios
/// de la aplicación, relacionado con la recopilación de datos clínicos, 
/// posiblemente en un contexto de atención materna.

class Formulario4Widget extends StatefulWidget {
  const Formulario4Widget({super.key});  // Constructor de la clase, define una clave para el widget.

  @override
  State<Formulario4Widget> createState() => _Formulario4WidgetState();  // Crea el estado asociado al widget.
}

class _Formulario4WidgetState extends State<Formulario4Widget> {
  late Formulario4Model _model;  // Variable para almacenar el modelo del formulario 4.

  final scaffoldKey = GlobalKey<ScaffoldState>();  // Define una clave global para el Scaffold del widget.

  @override
  void initState() {
    super.initState();
    _model = createModel(context, () => Formulario4Model());  // Inicializa el modelo del formulario 4.

    // Inicializa los controladores y nodos de enfoque de los diferentes campos de texto.
    _model.tensionTextController ??= TextEditingController();
    _model.tensionFocusNode ??= FocusNode();

    _model.frecuenciaMaternaTextController ??= TextEditingController();
    _model.frecuenciaMaternaFocusNode ??= FocusNode();

    _model.frecuenciaFetalTextController ??= TextEditingController();
    _model.frecuenciaFetalFocusNode ??= FocusNode();

    _model.frecuenciaRespiratoriaTextController ??= TextEditingController();
    _model.frecuenciaRespiratoriaFocusNode ??= FocusNode();

    _model.frecuenciaNeonatalTextController ??= TextEditingController();
    _model.frecuenciaNeonatalFocusNode ??= FocusNode();

    _model.sensibilidadTextController ??= TextEditingController();
    _model.sensibilidadFocusNode ??= FocusNode();

    _model.especificidadTextController ??= TextEditingController();
    _model.especificidadFocusNode ??= FocusNode();

    // Añade una callback para realizar cualquier tarea adicional después de que la construcción inicial esté completa.
    WidgetsBinding.instance.addPostFrameCallback((_) => setState(() {}));
  }

  @override
  void dispose() {
    _model.dispose();  // Libera los recursos utilizados por el modelo cuando el widget se destruye.
    super.dispose();  // Llama al dispose del padre.
  }

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: () => FocusScope.of(context).unfocus(),  // Permite cerrar el teclado cuando se toca fuera de los campos de texto.
      child: Scaffold(
        key: scaffoldKey,  // Asigna la clave del Scaffold.
        backgroundColor: Colors.white,  // Establece el color de fondo del Scaffold.
        
        // Drawer (menú lateral) de la aplicación.
        drawer: Container(
          width: 300,  // Define el ancho del Drawer.
          child: Drawer(
            elevation: 10,  // Establece la elevación del Drawer.
            child: Container(
              decoration: BoxDecoration(
                color: Color(0xCF56ABEC),  // Define el color de fondo del Drawer.
              ),
              child: Column(
                mainAxisSize: MainAxisSize.max,  // Hace que la columna ocupe el máximo espacio disponible.
                children: [
                  // Espaciado superior y botón para cerrar el Drawer.
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(20, 40, 20, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            if (scaffoldKey.currentState!.isDrawerOpen ||
                                scaffoldKey.currentState!.isEndDrawerOpen) {
                              Navigator.pop(context);  // Cierra el Drawer si está abierto.
                            }
                          },
                          child: Icon(
                            Icons.arrow_back,  // Icono de flecha hacia atrás.
                            color: Colors.white,
                            size: 24,
                          ),
                        ),
                      ],
                    ),
                  ),
                  // Imagen de perfil dentro del Drawer.
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 50, 0, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Container(
                          width: 120,
                          height: 120,
                          clipBehavior: Clip.antiAlias,
                          decoration: BoxDecoration(
                            shape: BoxShape.circle,  // Hace que la imagen sea circular.
                          ),
                          child: Image.asset(
                            'assets/images/perfil.jpg',  // Ruta de la imagen.
                            fit: BoxFit.cover,  // Ajusta la imagen para que cubra completamente el área.
                          ),
                        ),
                      ],
                    ),
                  ),
                  // Muestra el nombre de usuario y el correo electrónico.
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 4, 0, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        AuthUserStreamWidget(
                          builder: (context) => Text(
                            currentUserDisplayName,  // Muestra el nombre de usuario actual.
                            style: FlutterFlowTheme.of(context)
                                .titleMedium
                                .override(
                                  fontFamily: 'Readex Pro',
                                  letterSpacing: 0,
                                ),
                          ),
                        ),
                      ],
                    ),
                  ),
                  // Muestra el correo electrónico del usuario.
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 4, 0, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text(
                          currentUserEmail,  // Muestra el correo electrónico del usuario actual.
                          style:
                              FlutterFlowTheme.of(context).titleMedium.override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                        ),
                      ],
                    ),
                  ),
                  // Lista de opciones en el Drawer para navegar a diferentes pantallas.
                  ListView(
                    padding: EdgeInsets.zero,
                    shrinkWrap: true,
                    scrollDirection: Axis.vertical,
                    children: [
                      // Botón para ir a la página principal.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 10, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('PaginaPrincipal');  // Navega a la página principal.
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.restart_alt,  // Icono de reinicio.
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                '72muyr38' /* Inicio */,
                              ),
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),  // Color de fondo del ListTile.
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),  // Bordes redondeados del ListTile.
                            ),
                          ),
                        ),
                      ),
                      // Botón para configurar el perfil.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Perfil');  // Navega a la pantalla de perfil.
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.person,  // Icono de persona.
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                '9u2knfuc' /* Configura tu Perfil */,
                              ),
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),  // Color de fondo del ListTile.
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),  // Bordes redondeados del ListTile.
                            ),
                          ),
                        ),
                      ),
                      // Botón para ir al formulario de paciente.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Formulario');  // Navega al formulario de paciente.
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.dynamic_form,  // Icono de formulario dinámico.
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'idjrjri3' /* Formulario-Paciente */,
                              ),
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),  // Color de fondo del ListTile.
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),  // Bordes redondeados del ListTile.
                            ),
                          ),
                        ),
                      ),
                      // Botón para ir a la pantalla de imágenes termográficas.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Imagenes');  // Navega a la pantalla de imágenes termográficas.
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.image_search,  // Icono de búsqueda de imágenes.
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                '2uzd8464' /* Imágenes Termográficas */,
                              ),
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),  // Color de fondo del ListTile.
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),  // Bordes redondeados del ListTile.
                            ),
                          ),
                        ),
                      ),
                      // Botón para ir a la pantalla de resultados.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Resultados');  // Navega a la pantalla de resultados.
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.bar_chart,  // Icono de gráfico de barras.
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'i53ouyh0' /* Resultados */,
                              ),
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),  // Color de fondo del ListTile.
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),  // Bordes redondeados del ListTile.
                            ),
                          ),
                        ),
                      ),
                      // Botón para ir a la pantalla de base de datos.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('BasedeDatos');  // Navega a la pantalla de base de datos.
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.card_travel,  // Icono de maletín.
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                '4jsw09uf' /* Base de Datos */,
                              ),
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),  // Color de fondo del ListTile.
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),  // Bordes redondeados del ListTile.
                            ),
                          ),
                        ),
                      ),
                      // Botón para salir de la aplicación.
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Login');  // Navega a la pantalla de inicio de sesión.
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.exit_to_app,  // Icono de salida.
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'gj2rxowr' /* Salir  */,
                              ),
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),  // Color de fondo del ListTile.
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),  // Bordes redondeados del ListTile.
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ),
        ),

        // Barra de navegación superior (AppBar) de la pantalla.
        appBar: AppBar(
          backgroundColor: Color(0xCF56ABEC),  // Color de fondo del AppBar.
          iconTheme: IconThemeData(color: Colors.black),  // Color de los iconos en el AppBar.
          automaticallyImplyLeading: true,  // Indica si se debe mostrar el botón de regreso.
          title: Row(
            mainAxisSize: MainAxisSize.max,
            children: [
              Row(
                mainAxisSize: MainAxisSize.max,
                mainAxisAlignment: MainAxisAlignment.start,
                children: [
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 0, 20, 0),
                    child: Text(
                      FFLocalizations.of(context).getText(
                        'kjx3jour' /* Formulario
mamitas */,
                      ),
                      style:
                          FlutterFlowTheme.of(context).headlineSmall.override(
                                fontFamily: 'Outfit',
                                letterSpacing: 0,
                              ),
                    ),
                  ),
                ],
              ),
            ],
          ),
          actions: [
            Container(
              height: 100,
              decoration: BoxDecoration(),
              child: Stack(
                children: [
                  if (Theme.of(context).brightness == Brightness.light)
                    InkWell(
                      splashColor: Colors.transparent,
                      focusColor: Colors.transparent,
                      hoverColor: Colors.transparent,
                      highlightColor: Colors.transparent,
                      onTap: () async {
                        setDarkModeSetting(
                          context,
                          !(Theme.of(context).brightness == Brightness.dark)
                              ? ThemeMode.dark
                              : ThemeMode.light,  // Alterna entre modo claro y oscuro.
                        );
                      },
                      child: Icon(
                        Icons.dark_mode_outlined,  // Icono de modo oscuro.
                        color: Colors.black,
                        size: 40,
                      ),
                    ),
                  if (Theme.of(context).brightness == Brightness.dark)
                    InkWell(
                      splashColor: Colors.transparent,
                      focusColor: Colors.transparent,
                      hoverColor: Colors.transparent,
                      highlightColor: Colors.transparent,
                      onTap: () async {
                        setDarkModeSetting(context, ThemeMode.light);  // Alterna al modo claro.
                      },
                      child: Icon(
                        Icons.light_mode_outlined,  // Icono de modo claro.
                        color: Colors.black,
                        size: 40,
                      ),
                    ),
                ],
              ),
            ),
          ],
          centerTitle: true,  // Centra el título del AppBar.
          elevation: 4,  // Elevación del AppBar.
        ),

        // Contenido principal del cuerpo de la pantalla.
        body: SafeArea(
          top: true,  // Indica que debe respetar la zona segura en la parte superior.
          child: Column(
            mainAxisSize: MainAxisSize.max,  // Hace que la columna ocupe el máximo espacio disponible.
            children: [
              Container(
                decoration: BoxDecoration(),
                child: Column(
                  mainAxisSize: MainAxisSize.max,
                  children: [
                    // Fila con un botón de regreso.
                    Row(
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Formulario3');  // Navega de regreso al formulario 3.
                          },
                          child: Icon(
                            Icons.arrow_back,  // Icono de flecha hacia atrás.
                            color: Colors.black,
                            size: 40,
                          ),
                        ),
                        Text(
                          FFLocalizations.of(context).getText(
                            '0i1ypvvi' /* Atrás */,
                          ),
                          style:
                              FlutterFlowTheme.of(context).bodyMedium.override(
                                    fontFamily: 'Readex Pro',
                                    fontSize: 18,
                                    letterSpacing: 0,
                                  ),
                        ),
                      ],
                    ),
                    // Campo de texto para la tensión arterial.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.tensionTextController,
                        focusNode: _model.tensionFocusNode,
                        autofocus: true,  // Hace que el campo de texto obtenga el enfoque automáticamente.
                        obscureText: false,  // Indica que el texto no se debe ocultar.
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            'nwpglxj9' /* Tensión Arterial  */,
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,  // Alinea la etiqueta con el hint.
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),  // Bordes redondeados para el campo de texto.
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 20, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,  // Texto centrado dentro del campo de texto.
                        keyboardType: TextInputType.number,  // Tipo de teclado numérico.
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.tensionTextControllerValidator
                            .asValidator(context),  // Validador para el campo de texto.
                      ),
                    ),
                    // Campo de texto para la frecuencia cardíaca materna.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.frecuenciaMaternaTextController,
                        focusNode: _model.frecuenciaMaternaFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            '8meo1zjs' /* Frecuencia Cardiaca Materna */,
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          filled: true,  // Campo de texto relleno.
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,
                        keyboardType: TextInputType.number,
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model
                            .frecuenciaMaternaTextControllerValidator
                            .asValidator(context),
                      ),
                    ),
                    // Campo de texto para la frecuencia cardíaca fetal.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.frecuenciaFetalTextController,
                        focusNode: _model.frecuenciaFetalFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            '0g1yt9ui' /* Frecuencia Cardiaca Fetal */,
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          filled: true,
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,
                        keyboardType: TextInputType.number,
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.frecuenciaFetalTextControllerValidator
                            .asValidator(context),
                      ),
                    ),
                    // Campo de texto para la frecuencia respiratoria materna.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.frecuenciaRespiratoriaTextController,
                        focusNode: _model.frecuenciaRespiratoriaFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            'hjm4k4e6' /* Frecuencia Respiratoria Materna */,
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          filled: true,
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,
                        keyboardType: TextInputType.number,
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model
                            .frecuenciaRespiratoriaTextControllerValidator
                            .asValidator(context),
                      ),
                    ),
                    // Campo de texto para la frecuencia cardíaca neonatal.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.frecuenciaNeonatalTextController,
                        focusNode: _model.frecuenciaNeonatalFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            '6q53kpea' /* Frecuencia Cardiaca Neonatal */,
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          filled: true,  // Campo de texto relleno.
                          contentPadding: EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),  // Espaciado interno.
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,  // Texto centrado en el campo.
                        keyboardType: TextInputType.number,  // Tipo de teclado numérico para ingresar datos.
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.frecuenciaNeonatalTextControllerValidator
                            .asValidator(context),  // Validador para el campo de frecuencia cardíaca neonatal.
                      ),
                    ),
                    
                    // Dropdown (desplegable) para seleccionar reacciones adversas maternas.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: FlutterFlowDropDown<String>(
                        controller: _model.controlPrenatalValueController ??=
                            FormFieldController<String>(null),
                        options: [
                          FFLocalizations.of(context).getText(
                            'fk8973hl' /* Aumento de Temperatura Corporal */,
                          ),
                          FFLocalizations.of(context).getText(
                            'vzfw6qs9' /* Rash */,
                          ),
                          FFLocalizations.of(context).getText(
                            '843c5a3g' /* Prurito */,
                          ),
                          FFLocalizations.of(context).getText(
                            'shxakjtp' /* Náuseas */,
                          ),
                          FFLocalizations.of(context).getText(
                            '44i08op8' /* Vómito */,
                          )
                        ],
                        onChanged: (val) => setState(() => _model.controlPrenatalValue = val),
                        width: 382,
                        height: 56,
                        textStyle: FlutterFlowTheme.of(context)
                            .headlineMedium
                            .override(
                              fontFamily: 'Outfit',
                              fontSize: 18,
                              letterSpacing: 0,
                            ),
                        hintText: FFLocalizations.of(context).getText(
                          'fvs00y6c' /* Reacciones Adversas Maternas */,
                        ),
                        icon: Icon(
                          Icons.keyboard_arrow_down_rounded,
                          color: FlutterFlowTheme.of(context).secondaryText,
                          size: 24,
                        ),
                        fillColor: FlutterFlowTheme.of(context).secondaryBackground,
                        elevation: 2,
                        borderColor: Color(0xFF1134B6),
                        borderWidth: 2,
                        borderRadius: 8,
                        margin: EdgeInsetsDirectional.fromSTEB(5, 4, 16, 4),
                        hidesUnderline: true,
                        isOverButton: true,
                        isSearchable: false,
                        isMultiSelect: false,
                      ),
                    ),
                    
                    // Campo de texto para ingresar sensibilidad.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.sensibilidadTextController,
                        focusNode: _model.sensibilidadFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            '5gbudlhi' /* Sensibilidad  */,
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                fontFamily: 'Readex Pro',
                                color: Colors.black,
                                letterSpacing: 0,
                              ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          filled: true,  // Campo de texto relleno.
                          contentPadding: EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),  // Espaciado interno.
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,  // Texto centrado en el campo.
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.sensibilidadTextControllerValidator.asValidator(context),  // Validador para el campo de sensibilidad.
                      ),
                    ),
                    
                    // Campo de texto para ingresar especificidad.
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.especificidadTextController,
                        focusNode: _model.especificidadFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            'k9prewkg' /* Especificidad */,
                          ),
                          labelStyle: FlutterFlowTheme.of(context).bodyMedium.override(
                                fontFamily: 'Readex Pro',
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                fontFamily: 'Readex Pro',
                                color: Colors.black,
                                letterSpacing: 0,
                              ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),  // Bordes redondeados para el campo de texto.
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          filled: true,  // Campo de texto relleno.
                          contentPadding: EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),  // Espaciado interno.
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,  // Texto centrado en el campo.
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.especificidadTextControllerValidator.asValidator(context),  // Validador para el campo de especificidad.
                      ),
                    ),
                    
                    // Botón de navegación al siguiente formulario (Formulario5).
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                      child: FFButtonWidget(
                        onPressed: () async {
                          context.pushNamed('Formulario5');  // Navega al formulario 5.
                        },
                        text: FFLocalizations.of(context).getText(
                          'kkz2uc6m' /* Siguiente */,
                        ),
                        options: FFButtonOptions(
                          height: 40,
                          padding: EdgeInsetsDirectional.fromSTEB(24, 0, 24, 0),
                          iconPadding: EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                          color: Color(0xCF56ABEC),  // Color del botón.
                          textStyle: FlutterFlowTheme.of(context).titleSmall.override(
                                fontFamily: 'Readex Pro',
                                color: Colors.white,
                                letterSpacing: 0,
                              ),
                          elevation: 3,
                          borderSide: BorderSide(
                            color: Colors.transparent,
                            width: 1,
                          ),
                          borderRadius: BorderRadius.circular(8),  // Bordes redondeados del botón.
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
// Importa el modelo asociado a este formulario
import 'formulario5_model.dart';
export 'formulario5_model.dart';

// Define el widget `Formulario5Widget` como un widget con estado
class Formulario5Widget extends StatefulWidget {
  const Formulario5Widget({super.key});

  @override
  State<Formulario5Widget> createState() => _Formulario5WidgetState();
}

class _Formulario5WidgetState extends State<Formulario5Widget> {
  // Instancia de la clase `Formulario5Model` que maneja la lógica de estado
  late Formulario5Model _model;

  // Llave global para manejar el estado del `Scaffold`, incluyendo el Drawer
  final scaffoldKey = GlobalKey<ScaffoldState>();

  // Método que se ejecuta al inicializar el widget
  @override
  void initState() {
    super.initState();

    // Crea el modelo asociado al formulario usando un método específico
    _model = createModel(context, () => Formulario5Model());

    // Inicializa los controladores de texto y nodos de enfoque para cada campo
    _model.valorPositivoTextController ??= TextEditingController();
    _model.valorPositivoFocusNode ??= FocusNode();

    _model.valornegativoTextController ??= TextEditingController();
    _model.valornegativoFocusNode ??= FocusNode();

    _model.razonPositivaTextController ??= TextEditingController();
    _model.razonPositivaFocusNode ??= FocusNode();

    _model.razonNegativaTextController ??= TextEditingController();
    _model.razonNegativaFocusNode ??= FocusNode();

    _model.rocTextController ??= TextEditingController();
    _model.rocFocusNode ??= FocusNode();

    // Callback que asegura que el estado del widget se actualiza después de que la primera renderización ocurra
    WidgetsBinding.instance.addPostFrameCallback((_) => setState(() {}));
  }

  // Método que se ejecuta al destruir el widget, liberando recursos
  @override
  void dispose() {
    _model.dispose();  // Libera los recursos asociados al modelo

    super.dispose();
  }

  // Método que construye la interfaz de usuario del widget
  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      // Detecta toques fuera de los campos de texto para cerrar el teclado
      onTap: () => FocusScope.of(context).unfocus(),
      child: Scaffold(
        key: scaffoldKey,  // Asigna la llave global al Scaffold
        backgroundColor: Colors.white,  // Color de fondo del Scaffold
        drawer: Container(
          width: 300,  // Ancho del Drawer
          child: Drawer(
            elevation: 10,  // Elevación del Drawer para dar sombra
            child: Container(
              width: 100,
              height: 100,
              decoration: BoxDecoration(
                color: Color(0xCF56ABEC),  // Color de fondo del Drawer
              ),
              child: Column(
                mainAxisSize: MainAxisSize.max,
                children: [
                  // Sección superior del Drawer con botón de regreso
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(20, 40, 20, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            if (scaffoldKey.currentState!.isDrawerOpen ||
                                scaffoldKey.currentState!.isEndDrawerOpen) {
                              Navigator.pop(context);  // Cierra el Drawer si está abierto
                            }
                          },
                          child: Icon(
                            Icons.arrow_back,
                            color: Colors.white,  // Color del ícono de regreso
                            size: 24,  // Tamaño del ícono
                          ),
                        ),
                      ],
                    ),
                  ),
                  
                  // Imagen de perfil en el Drawer
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 50, 0, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Container(
                          width: 120,
                          height: 120,
                          clipBehavior: Clip.antiAlias,
                          decoration: BoxDecoration(
                            shape: BoxShape.circle,  // Imagen en forma circular
                          ),
                          child: Image.asset(
                            'assets/images/perfil.jpg',
                            fit: BoxFit.cover,  // La imagen cubre el área sin distorsión
                          ),
                        ),
                      ],
                    ),
                  ),
                  
                  // Nombre de usuario extraído de la autenticación
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 4, 0, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        AuthUserStreamWidget(
                          builder: (context) => Text(
                            currentUserDisplayName,  // Muestra el nombre del usuario actual
                            style: FlutterFlowTheme.of(context)
                                .titleMedium
                                .override(
                                  fontFamily: 'Readex Pro',
                                  letterSpacing: 0,
                                ),
                          ),
                        ),
                      ],
                    ),
                  ),
                  
                  // Correo del usuario autenticado
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 4, 0, 0),
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text(
                          currentUserEmail,  // Muestra el correo del usuario actual
                          style: FlutterFlowTheme.of(context).titleMedium.override(
                                fontFamily: 'Readex Pro',
                                letterSpacing: 0,
                              ),
                        ),
                      ],
                    ),
                  ),
                  
                  // Lista de opciones en el Drawer, incluyendo navegación a diferentes pantallas
                  ListView(
                    padding: EdgeInsets.zero,
                    shrinkWrap: true,
                    scrollDirection: Axis.vertical,
                    children: [
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 10, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('PaginaPrincipal');  // Navega a la pantalla principal
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.restart_alt,
                              color: Colors.white,  // Ícono de la opción
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'krt9aegd' /* Inicio */,
                              ),
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),  // Color de fondo del ListTile
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),  // Bordes redondeados
                            ),
                          ),
                        ),
                      ),
                      
                      // Otras opciones del Drawer para navegar a diferentes pantallas
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Perfil');  // Navega a la pantalla de perfil
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.person,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'ktnkbl78' /* Configura tu Perfil */,
                              ),
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      
                      // Opción para ir al formulario de pacientes
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Formulario');  // Navega a la pantalla de formulario
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.dynamic_form,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'mwklasgy' /* Formulario-Paciente */,
                              ),
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      
                      // Opción para ver imágenes termográficas
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Imagenes');  // Navega a la pantalla de imágenes
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.image_search,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'z9j31va2' /* Imágenes Termográficas */,
                              ),
                              textAlign: TextAlign.start,
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      
                      // Opción para ver resultados
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Resultados');  // Navega a la pantalla de resultados
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.bar_chart,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'wvacbire' /* Resultados */,
                              ),
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      
                      // Opción para acceder a la base de datos
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('BasedeDatos');  // Navega a la pantalla de base de datos
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.card_travel,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                '0umvr5rh' /* Base de Datos */,
                              ),
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                      
                      // Opción para salir de la aplicación
                      Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(0, 20, 0, 0),
                        child: InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Login');  // Navega a la pantalla de login
                          },
                          child: ListTile(
                            leading: Icon(
                              Icons.exit_to_app,
                              color: Colors.white,
                            ),
                            title: Text(
                              FFLocalizations.of(context).getText(
                                'e74o8ort' /* Salir  */,
                              ),
                              style: FlutterFlowTheme.of(context)
                                  .titleMedium
                                  .override(
                                    fontFamily: 'Readex Pro',
                                    letterSpacing: 0,
                                  ),
                            ),
                            tileColor: Color(0xFF5A5A5A),
                            dense: false,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(16),
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ),
        ),
        
        // Barra de aplicaciones (AppBar) en la parte superior de la pantalla
        appBar: AppBar(
          backgroundColor: Color(0xCF56ABEC),
          iconTheme: IconThemeData(color: Colors.black),  // Color de los íconos en el AppBar
          automaticallyImplyLeading: true,
          title: Row(
            mainAxisSize: MainAxisSize.max,
            children: [
              Row(
                mainAxisSize: MainAxisSize.max,
                mainAxisAlignment: MainAxisAlignment.start,
                children: [
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 0, 20, 0),
                    child: Text(
                      FFLocalizations.of(context).getText(
                        '2d3zucpj' /* Formulario mamitas */,  // Título del AppBar
                      ),
                      style: FlutterFlowTheme.of(context).headlineSmall.override(
                            fontFamily: 'Outfit',
                            letterSpacing: 0,
                          ),
                    ),
                  ),
                ],
              ),
            ],
          ),
          
          // Íconos de acción en el AppBar para alternar entre modos claro y oscuro
          actions: [
            Container(
              height: 100,
              decoration: BoxDecoration(),
              child: Stack(
                children: [
                  if (Theme.of(context).brightness == Brightness.light)
                    InkWell(
                      splashColor: Colors.transparent,
                      focusColor: Colors.transparent,
                      hoverColor: Colors.transparent,
                      highlightColor: Colors.transparent,
                      onTap: () async {
                        setDarkModeSetting(
                          context,
                          !(Theme.of(context).brightness == Brightness.dark)
                              ? ThemeMode.dark
                              : ThemeMode.light,
                        );
                      },
                      child: Icon(
                        Icons.dark_mode_outlined,
                        color: Colors.black,
                        size: 40,  // Tamaño del ícono de modo oscuro
                      ),
                    ),
                  if (Theme.of(context).brightness == Brightness.dark)
                    InkWell(
                      splashColor: Colors.transparent,
                      focusColor: Colors.transparent,
                      hoverColor: Colors.transparent,
                      highlightColor: Colors.transparent,
                      onTap: () async {
                        setDarkModeSetting(context, ThemeMode.light);  // Cambia al modo claro
                      },
                      child: Icon(
                        Icons.light_mode_outlined,
                        color: Colors.black,
                        size: 40,  // Tamaño del ícono de modo claro
                      ),
                    ),
                ],
              ),
            ),
          ],
          centerTitle: true,  // Centra el título del AppBar
          elevation: 4,  // Elevación del AppBar para sombra
        ),
        
        // Cuerpo principal del Scaffold, donde se ubican los campos del formulario
        body: SafeArea(
          top: true,
          child: Column(
            mainAxisSize: MainAxisSize.max,
            children: [
              Container(
                decoration: BoxDecoration(),
                child: Column(
                  mainAxisSize: MainAxisSize.max,
                  children: [
                    // Fila que contiene el botón de retroceso
                    Row(
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        InkWell(
                          splashColor: Colors.transparent,
                          focusColor: Colors.transparent,
                          hoverColor: Colors.transparent,
                          highlightColor: Colors.transparent,
                          onTap: () async {
                            context.pushNamed('Formulario4');  // Regresa a `Formulario4`
                          },
                          child: Icon(
                            Icons.arrow_back,
                            color: Colors.black,
                            size: 40,  // Tamaño del ícono de retroceso
                          ),
                        ),
                        Text(
                          FFLocalizations.of(context).getText(
                            'jj5zwxeh' /* Atrás */,  // Texto del botón de retroceso
                          ),
                          style: FlutterFlowTheme.of(context).bodyMedium.override(
                                fontFamily: 'Readex Pro',
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                        ),
                      ],
                    ),
                    
                    // Campo de texto para el valor predictivo positivo
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.valorPositivoTextController,
                        focusNode: _model.valorPositivoFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            'yp5jv2t2' /* Valor Predictivo Positivo */,  // Etiqueta del campo
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,  // Color del texto de la etiqueta
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,  // Ancho del borde del campo
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          filled: true,
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 20, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,  // Alineación del texto en el campo
                        keyboardType: TextInputType.number,  // Tipo de teclado (numérico)
                        cursorColor: FlutterFlowTheme.of(context).tertiary,  // Color del cursor
                        validator: _model.valorPositivoTextControllerValidator
                            .asValidator(context),  // Validación del campo
                      ),
                    ),
                    
                    // Campo de texto para el valor predictivo negativo
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.valornegativoTextController,
                        focusNode: _model.valornegativoFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            'estdwvsh' /* Valor Predictivo Negativo */,  // Etiqueta del campo
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,
                        keyboardType: TextInputType.number,
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.valornegativoTextControllerValidator
                            .asValidator(context),
                      ),
                    ),
                    
                    // Campo de texto para la razón de probabilidad positiva
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.razonPositivaTextController,
                        focusNode: _model.razonPositivaFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            '6z8xv7vs' /* Razón de Probabilidad Positiva */,  // Etiqueta del campo
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          filled: true,
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,
                        keyboardType: TextInputType.number,
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.razonPositivaTextControllerValidator
                            .asValidator(context),
                      ),
                    ),
                    
                    // Campo de texto para la razón de probabilidad negativa
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.razonNegativaTextController,
                        focusNode: _model.razonNegativaFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            'u5yy3cgw' /* Razón de Probabilidad Negativa */,  // Etiqueta del campo
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          filled: true,
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,
                        keyboardType: TextInputType.number,
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.razonNegativaTextControllerValidator
                            .asValidator(context),
                      ),
                    ),
                    
                    // Campo de texto para el área bajo la curva ROC
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(8, 16, 8, 0),
                      child: TextFormField(
                        controller: _model.rocTextController,
                        focusNode: _model.rocFocusNode,
                        autofocus: true,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: FFLocalizations.of(context).getText(
                            '6o400nsk' /* Área Bajo la Curva ROC */,  // Etiqueta del campo
                          ),
                          labelStyle: FlutterFlowTheme.of(context)
                              .headlineSmall
                              .override(
                                fontFamily: 'Outfit',
                                color: Colors.black,
                                fontSize: 18,
                                letterSpacing: 0,
                              ),
                          alignLabelWithHint: true,
                          hintStyle:
                              FlutterFlowTheme.of(context).labelMedium.override(
                                    fontFamily: 'Readex Pro',
                                    color: Colors.black,
                                    letterSpacing: 0,
                                  ),
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).customColor1,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 4,
                            ),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          filled: true,
                          contentPadding:
                              EdgeInsetsDirectional.fromSTEB(0, 16, 0, 10),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium.override(
                              fontFamily: 'Readex Pro',
                              letterSpacing: 0,
                            ),
                        textAlign: TextAlign.center,
                        keyboardType: TextInputType.number,
                        cursorColor: FlutterFlowTheme.of(context).tertiary,
                        validator: _model.rocTextControllerValidator
                            .asValidator(context),
                      ),
                    ),
                    
                    // Botón de guardar, ubicado en la parte inferior de la pantalla
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(0, 150, 0, 0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Padding(
                            padding:
                                EdgeInsetsDirectional.fromSTEB(120, 0, 0, 20),
                            child: FFButtonWidget(
                              onPressed: () async {
                                await showDialog(
                                  context: context,
                                  builder: (alertDialogContext) {
                                    return AlertDialog(
                                      content: Text('Formulario Completado'),  // Muestra un mensaje de confirmación
                                      actions: [
                                        TextButton(
                                          onPressed: () =>
                                              Navigator.pop(alertDialogContext),
                                          child: Text('Ok'),
                                        ),
                                      ],
                                    );
                                  },
                                );

                                context.pushNamed('PaginaPrincipal');  // Redirige a la página principal
                              },
                              text: FFLocalizations.of(context).getText(
                                '7omjhaqj' /* Guardar */,  // Texto del botón de guardar
                              ),
                              options: FFButtonOptions(
                                height: 40,
                                padding: EdgeInsetsDirectional.fromSTEB(
                                    24, 0, 24, 0),
                                iconPadding:
                                    EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                                color: Color(0xCF56ABEC),
                                textStyle: FlutterFlowTheme.of(context)
                                    .headlineSmall
                                    .override(
                                      fontFamily: 'Outfit',
                                      letterSpacing: 0,
                                    ),
                                elevation: 3,
                                borderSide: BorderSide(
                                  color: Colors.transparent,
                                  width: 1,
                                ),
                                borderRadius: BorderRadius.circular(8),
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

